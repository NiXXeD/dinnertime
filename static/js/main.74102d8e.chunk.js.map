{"version":3,"sources":["nav/github.svg","nav/Nav.js","calc/UnitPrices.js","calc/Profit.js","calc/Calc.js","calc/BulkCalc.js","setup/playerData.js","setup/Setup.js","milestones/milestoneData.js","milestones/Milestone.js","milestones/Milestones.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","drawerAppBar","marginBottom","toolbar","paddingLeft","paddingRight","title","flex","menuItem","textDecoration","color","Nav","classes","_useState","useState","_useState2","Object","slicedToArray","drawerOpen","setDrawerOpen","closeDrawer","react_default","a","createElement","Fragment","AppBar","position","Toolbar","className","IconButton","menuButton","onClick","Menu_default","Typography","variant","target","href","alt","width","height","src","githubSvg","Drawer","open","onClose","drawer","react_router_dom","to","MenuItem","UnitPrices","_ref","onChange","value","FormControl","InputLabel","htmlFor","Select","input","Input","id","MenuProps","MenuListProps","style","maxHeight","toConsumableArray","Array","map","v","i","unitPrice","key","concat","theme","container","marginRight","display","right","subheader","textAlign","palette","text","secondary","dollars","fontSize","fontWeight","useTheme","Profit","_ref$value","defaultState","bonusItemsSold","cfo","garden","itemsSold","card","margin","maxWidth","select","switch","marginTop","Calc","setBonusItemsSold","_useState3","_useState4","setCfo","_useState5","_useState6","setGarden","_useState7","_useState8","setItemsSold","_useState9","_useState10","setUnitPrice","salesError","bonusError","salesDollars","bonusDollars","gardenMultiplier","cfoMultiplier","profit","Math","ceil","Card_default","CardHeader","CardContent","FormGroup","calc_UnitPrices","event","error","count","FormHelperText","FormControlLabel","label","control","Switch","checked","CardActions","Button","calc_Profit","normalSales","gardenSales","marketingBonuses","field","BulkCalc","setNormalSales","setGardenSales","setMarketingBonuses","normalProfit","gardenProfit","marketingProfit","TextField","name","type","playerData","2","mapSize","employees","billboards","reserve","3","4","5","subheading","Setup","players","setPlayers","data","keys","originalMilestoneData","alternateMilestoneData","maxRoundTwo","milestone","userSelect","cursor","border","borderRadius","textTransform","bottom","checkmark","left","x","Milestone","index","backgroundColor","localStorageKey","spacer","milestoneTypes","flexDirection","Milestones","getDataArray","arguments","length","undefined","milestoneType","oldStorageData","localStorage","getItem","parsedData","JSON","parse","milestones","ex","console","warn","removeItem","_useState2$","setMilestones","useEffect","stringify","setItem","updateMilestones","newMilestones","milestoneData","lib_default","milestones_Milestone","newValue","RadioGroup","group","newType","Radio","createMuiTheme","App","Component","ThemeProvider","nav_Nav","react_router","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.74102d8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.7337e417.svg\";","import React, {useState} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Drawer from '@material-ui/core/Drawer'\nimport githubSvg from './github.svg'\nimport {Link} from 'react-router-dom'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Nav() {\n    const classes = useStyles()\n    const [drawerOpen, setDrawerOpen] = useState(false)\n    const closeDrawer = () => setDrawerOpen(false)\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\" color=\"primary\">\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        className={classes.menuButton}\n                        onClick={() => setDrawerOpen(!drawerOpen)}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n                        Food Chain Magnate\n                    </Typography>\n\n                    <IconButton target=\"_blank\" href=\"https://github.com/NiXXeD/dinnertime\">\n                        <img alt=\"github link\" width=\"24\" height=\"24\" src={githubSvg}/>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer open={drawerOpen} onClose={closeDrawer} className={classes.drawer}>\n                <AppBar position=\"static\" color=\"primary\" className={classes.drawerAppBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>FCM Helper</Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <Link className={classes.menuItem} to=\"/calc\">\n                    <MenuItem onClick={closeDrawer}>Dinnertime Calculator</MenuItem>\n                </Link>\n                <Link className={classes.menuItem} to=\"/bulk\">\n                    <MenuItem onClick={closeDrawer}>Bulk Sale Calculator</MenuItem>\n                </Link>\n                <Link className={classes.menuItem} to=\"/setup\">\n                    <MenuItem onClick={closeDrawer}>Setup Reference</MenuItem>\n                </Link>\n                <Link className={classes.menuItem} to=\"/milestones\">\n                    <MenuItem onClick={closeDrawer}>Milestone Tracker</MenuItem>\n                </Link>\n            </Drawer>\n        </React.Fragment>\n    )\n}\n\nconst useStyles = makeStyles({\n    drawerAppBar: {\n        marginBottom: 24\n    },\n    toolbar: {\n        paddingLeft: 8,\n        paddingRight: 8\n    },\n    title: {\n        paddingLeft: 12,\n        flex: 1\n    },\n    menuItem: {\n        textDecoration: 'none',\n        color: 'inherit'\n    }\n})\n\nexport default Nav\n","import React from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nfunction UnitPrices({className, onChange, value}) {\n    return (\n        <FormControl className={className}>\n            <InputLabel htmlFor=\"unitPrice\">Unit Price</InputLabel>\n            <Select\n                value={value}\n                onChange={onChange}\n                input={<Input id=\"unitPrice\"/>}\n                MenuProps={{\n                    MenuListProps: {\n                        style: {\n                            maxHeight: 256\n                        }\n                    }\n                }}\n            >\n                {[...new Array(26)].map((v, i) => i - 5).map(unitPrice =>\n                    <MenuItem key={unitPrice} value={unitPrice}>{`$${unitPrice}`}</MenuItem>)\n                }\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default UnitPrices\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Profit({value = 0}) {\n    const classes = useStyles()\n    return (\n        <div className={classes.container}>\n            <div className={classes.subheader}>Profit</div>\n            <div className={classes.dollars}>{`$${value}`}</div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginRight: 16,\n        marginBottom: 16,\n        width: '100%',\n        display: 'inline-block',\n        right: 0\n    },\n    subheader: {\n        textAlign: 'right',\n        color: theme.palette.text.secondary\n    },\n    dollars: {\n        fontSize: '38px',\n        fontWeight: 'bold',\n        color: 'darkgreen',\n        textAlign: 'right'\n    }\n}), {useTheme: true})\n\nexport default Profit\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Calc() {\n    const classes = useStyles()\n    const [bonusItemsSold, setBonusItemsSold] = useState(defaultState.bonusItemsSold)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n    const [garden, setGarden] = useState(defaultState.garden)\n    const [itemsSold, setItemsSold] = useState(defaultState.itemsSold)\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n\n    const salesError = !garden && itemsSold > 3\n    const bonusError = bonusItemsSold > itemsSold\n\n    const salesDollars = unitPrice * itemsSold\n    const bonusDollars = bonusItemsSold * 5\n    const gardenMultiplier = garden ? 2 : 1\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const profit = Math.ceil(((salesDollars * gardenMultiplier) + bonusDollars) * cfoMultiplier)\n\n    const reset = () => {\n        setBonusItemsSold(defaultState.bonusItemsSold)\n        setCfo(defaultState.cfo)\n        setGarden(defaultState.garden)\n        setItemsSold(defaultState.itemsSold)\n        setUnitPrice(defaultState.unitPrice)\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Dinnertime Calculator\"/>\n            <CardContent>\n                <FormGroup>\n                    {/*Unit Price */}\n                    <UnitPrices\n                        className={classes.select}\n                        value={unitPrice}\n                        onChange={event => setUnitPrice(event.target.value)}\n                    />\n\n                    {/* Items Sold */}\n                    <FormControl className={classes.select} error={salesError}>\n                        <InputLabel htmlFor=\"sales\">Items Sold</InputLabel>\n                        <Select\n                            value={itemsSold}\n                            onChange={event => setItemsSold(event.target.value)}\n                            input={<Input id=\"sales\"/>}\n                        >\n                            {[1, 2, 3, 4, 5].map(count =>\n                                <MenuItem key={count} value={count}>{`${count} item(s) sold`}</MenuItem>)\n                            }\n                        </Select>\n                        {\n                            salesError &&\n                            <FormHelperText>Items sold must be at most 3 for regular house.</FormHelperText>\n                        }\n                    </FormControl>\n\n                    {/* Bonus Sales */}\n                    <FormControl className={classes.select} error={bonusError}>\n                        <InputLabel htmlFor=\"bonus\">Marketing Bonuses</InputLabel>\n                        <Select\n                            value={bonusItemsSold}\n                            onChange={event => setBonusItemsSold(event.target.value)}\n                            input={<Input id=\"bonus\"/>}\n                        >\n                            {[0, 1, 2, 3, 4, 5].map(count =>\n                                <MenuItem key={count} value={count}>{`${count} bonus(es)`}</MenuItem>)\n                            }\n                        </Select>\n                        {\n                            bonusError &&\n                            <FormHelperText>Marketing bonuses may not exceed items sold.</FormHelperText>\n                        }\n                    </FormControl>\n\n                    {/* Garden House */}\n                    <FormControlLabel\n                        className={classes.switch}\n                        label=\"Garden House\"\n                        control={\n                            <Switch\n                                checked={garden}\n                                onChange={event => setGarden(event.target.checked)}\n                            />\n                        }\n                    />\n\n                    {/* CFO Bonus */}\n                    <FormControlLabel\n                        className={classes.switch}\n                        label=\"CFO Bonus\"\n                        control={\n                            <Switch\n                                checked={cfo}\n                                onChange={event => setCfo(event.target.checked)}\n                            />\n                        }\n                    />\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    bonusItemsSold: 0,\n    cfo: false,\n    garden: false,\n    itemsSold: 1,\n    unitPrice: 10\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 275\n    },\n    select: {\n        marginBottom: 24\n    },\n    switch: {\n        marginTop: -6\n    }\n})\n\nexport default Calc\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport UnitPrices from './UnitPrices'\nimport Profit from './Profit'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction BulkCalc() {\n    const classes = useStyles()\n    const [unitPrice, setUnitPrice] = useState(defaultState.unitPrice)\n    const [normalSales, setNormalSales] = useState(defaultState.normalSales)\n    const [gardenSales, setGardenSales] = useState(defaultState.gardenSales)\n    const [marketingBonuses, setMarketingBonuses] = useState(defaultState.marketingBonuses)\n    const [cfo, setCfo] = useState(defaultState.cfo)\n\n    const cfoMultiplier = cfo ? 1.5 : 1\n    const normalProfit = normalSales * unitPrice\n    const gardenProfit = gardenSales * unitPrice * 2\n    const marketingProfit = (marketingBonuses * 5)\n    const profit = Math.ceil(cfoMultiplier * (normalProfit + gardenProfit + marketingProfit))\n\n    const reset = () => {\n        setUnitPrice(defaultState.unitPrice)\n        setNormalSales(defaultState.normalSales)\n        setGardenSales(defaultState.gardenSales)\n        setMarketingBonuses(defaultState.marketingBonuses)\n        setCfo(defaultState.cfo)\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Bulk Sale Calculator\"/>\n            <CardContent>\n                <FormGroup>\n                    {/* Unit Price */}\n                    <UnitPrices\n                        className={classes.field}\n                        value={unitPrice}\n                        onChange={event => setUnitPrice(event.target.value)}\n                    />\n\n                    {/* Normal Sales */}\n                    <TextField\n                        className={classes.field}\n                        name=\"normalSales\"\n                        label=\"Normal Sales\"\n                        value={normalSales}\n                        type=\"number\"\n                        onChange={event => setNormalSales(event.target.value)}\n                    />\n\n                    {/* Garden Sales */}\n                    <TextField\n                        className={classes.field}\n                        name=\"gardenSales\"\n                        label=\"Garden Sales\"\n                        value={gardenSales}\n                        type=\"number\"\n                        onChange={event => setGardenSales(event.target.value)}\n                    />\n\n                    {/* Marketing Bonuses */}\n                    <TextField\n                        className={classes.field}\n                        name=\"marketingBonuses\"\n                        label=\"Marketing Bonuses\"\n                        value={marketingBonuses}\n                        type=\"number\"\n                        onChange={event => setMarketingBonuses(event.target.value)}\n                    />\n\n                    {/* CFO Bonus */}\n                    <FormControlLabel\n                        className={classes.switch}\n                        label=\"CFO Bonus\"\n                        control={\n                            <Switch\n                                checked={cfo}\n                                onChange={event => setCfo(event.target.checked)}\n                            />\n                        }\n                    />\n                </FormGroup>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <Profit value={profit}/>\n            </CardActions>\n        </Card>\n    )\n}\n\nconst defaultState = {\n    unitPrice: 10,\n    normalSales: 0,\n    gardenSales: 0,\n    marketingBonuses: 0,\n    cfo: false\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 275\n    },\n    field: {\n        marginBottom: 24\n    },\n    switch: {\n        marginTop: -6\n    }\n})\n\nexport default BulkCalc\n","export default {\n    2: {\n        mapSize: '3 x 3',\n        employees: '1',\n        billboards: '#2, #3, #12, #15, #16',\n        reserve: '$100'\n    },\n    3: {\n        mapSize: '3 x 4',\n        employees: '1',\n        billboards: '#2, #3, #15, #16',\n        reserve: '$150'\n    },\n    4: {\n        mapSize: '4 x 4',\n        employees: '2',\n        billboards: '#3, #16',\n        reserve: '$200'\n    },\n    5: {\n        mapSize: '4 x 5',\n        employees: '3',\n        billboards: 'None',\n        reserve: '$250'\n    }\n}\n","import React, {useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Typography from '@material-ui/core/Typography'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport playerData from './playerData'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Setup() {\n    const classes = useStyles()\n    const [players, setPlayers] = useState(2)\n    const data = playerData[players]\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Setup Reference\"/>\n            <CardContent>\n                <FormGroup>\n                    {/* Players */}\n                    <FormControl>\n                        <InputLabel htmlFor=\"players\">Players</InputLabel>\n                        <Select\n                            value={players}\n                            onChange={event => setPlayers(event.target.value)}\n                            input={<Input id=\"players\"/>}\n                        >\n                            {\n                                Object.keys(playerData).map(count =>\n                                    <MenuItem key={count} value={count}>{`${count} players`}</MenuItem>\n                                )\n                            }\n                        </Select>\n                    </FormControl>\n\n                    {/* Map Size */}\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.subheading}>\n                        Map Size\n                    </Typography>\n                    <Typography variant=\"body2\">{data.mapSize}</Typography>\n\n                    {/* 1x Employees */}\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.subheading}>1x\n                        Employees\n                    </Typography>\n                    <Typography variant=\"body2\">{data.employees}</Typography>\n\n                    {/* Billboards Removed */}\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.subheading}>\n                        Billboards Removed</Typography>\n                    <Typography variant=\"body2\">{data.billboards}\n                    </Typography>\n\n                    {/* Reserve */}\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.subheading}>\n                        Reserve\n                    </Typography>\n                    <Typography variant=\"body2\">{data.reserve}</Typography>\n                </FormGroup>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 225\n    },\n    subheading: {\n        marginTop: 16\n    }\n})\n\nexport default Setup\n","export const originalMilestoneData = [\n    {color: '#AF95C2', title: 'to hire 3 people in 1 turn', text: '+2 Management Trainees'},\n    {color: '#BDB6B3', title: 'to train someone', text: '$15 discount on salaries'},\n    {color: '#98C2C9', title: 'billboard placed', text: 'No salaries for marketeers; Eternal marketing.'},\n    {color: '#AF95C2', title: 'to throw away drink/food', text: 'Get a freezer that stores 10 items (drink or food)'},\n    {color: '#95A968', title: 'burger produced', text: '+1 Burger Cook'},\n    {color: '#98C2C9', title: 'burger marketed', text: '+$5 for every burger sold'},\n    {color: '#AF95C2', title: 'waitress played', text: 'Each waitress +$2'},\n    {color: '#95A968', title: 'pizza produced', text: '+1 Pizza Cook'},\n    {color: '#98C2C9', title: 'pizza marketed', text: '+$5 for every pizza sold'},\n    {color: '#AF95C2', title: 'to have $20', text: 'May see bank reserve cards'},\n    {color: '#A9CB94', title: 'Errand Boy played', text: 'All buyers get +1 drink from each source'},\n    {color: '#98C2C9', title: 'drink marketed', text: '+$5 for every drink sold'},\n    {color: '#AF95C2', title: 'to have $100', text: 'Your CEO counts as CFO (+50% to cash earned). May not have CFO.'},\n    {color: '#A9CB94', title: 'Cart Operator played', text: 'Buyers get range +1'},\n    {color: '#98C2C9', title: 'airplane campaign', text: 'Count +2 open slots when determining order of play'},\n    {color: '#EAA791', title: 'to lower prices', text: 'Price -$1'},\n    {color: '#BDB6B3', title: 'to pay $20 or more in salaries', text: 'May use multiple trainers on the same person'},\n    {color: '#98C2C9', title: 'radio campaign', text: 'Your radios market 2 goods per turn instead of 1'}\n]\nexport const alternateMilestoneData = [\n    {color: '#98C2C9', title: 'marketer played', text: '$5 for every good marketed; Range -2 for dinnertime', maxRoundTwo: true},\n    {color: '#98C2C9', title: 'marketing trainee played', text: 'Get free Kitchen Trainee and Errand Boy'},\n    {color: '#98C2C9', title: 'campaign manager played', text: 'May place second billboard advertising same product and duration (once)'},\n    {color: '#98C2C9', title: 'brand manager played', text: 'May place 2 different goods on plane; choose priority of goods when placed'},\n    {color: '#98C2C9', title: 'brand director played', text: 'Your radios are permanent'},\n    {color: '#EAA791', title: 'burger sold', text: 'CEO always has 4 slots'},\n    {color: '#EAA791', title: 'pizza sold', text: 'Place radio tower on tile of sale advertising pizza for two turns'},\n    {color: '#EAA791', title: 'lemonade sold', text: 'Any employee can be trained on the job, preserving color'},\n    {color: '#EAA791', title: 'beer sold', text: 'May pay salary with food or drink'},\n    {color: '#EAA791', title: 'coke sold', text: 'Freezer - may store up to 10 items'},\n    {color: '#BDB6B3', title: 'recruiting girl played', text: 'Get a free executive vice president; Pay him no salary', maxRoundTwo: true},\n    {color: '#BDB6B3', title: 'trainer played', text: 'Get a free trainer; No longer needs to fire employees if broke', maxRoundTwo: true},\n    {color: '#BDB6B3', title: 'discount manager played', text: 'If you discount by $3 or more, remove $100 from the bank'},\n    {color: '#AF95C2', title: 'house built', text: 'May stack trainers'},\n    {color: '#934a34', title: 'new restaurant built', text: 'Place permanent mailbox in restaurant area'},\n    {color: '#AF95C2', title: 'waitress played', text: 'Salaries are $3 each'},\n    {color: '#A9CB94', title: 'cart operator played', text: 'Double amount of drinks hauled by cart/truck/zeppelin'},\n]\n","import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\n\nfunction Milestone({index, milestone, onChange, value}) {\n    const classes = useStyles()\n    const {color, title, text, maxRoundTwo} = milestone\n\n    const handleClick = () => {\n        let nextValue\n        if (value === 'available') nextValue = 'mine'\n        else if (value === 'mine') nextValue = 'unavailable'\n        else nextValue = 'available'\n\n        return onChange(index, nextValue)\n    }\n\n    return (\n        <div\n            className={classes.milestone}\n            style={{backgroundColor: color}}\n            onClick={handleClick}\n        >\n            {value === 'mine' && <div className={classes.checkmark}>✓</div>}\n            {value === 'unavailable' && <div className={classes.x}>✗</div>}\n            <div className={classes.container}>\n                <div className={classes.title}>First {title}</div>\n                <div className={classes.text}>{text}</div>\n                {maxRoundTwo && <div className={classes.maxRoundTwo}>remove after<br/>round two</div>}\n            </div>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    milestone: {\n        margin: 8,\n        width: 155,\n        height: 155,\n        userSelect: 'none',\n        cursor: 'pointer',\n        border: '1px solid black',\n        borderRadius: 10\n    },\n    container: {\n        margin: 6\n    },\n    title: {\n        textAlign: 'center',\n        fontWeight: 600,\n        textTransform: 'uppercase',\n        marginBottom: 12,\n        color: '#000'\n    },\n    text: {\n        textAlign: 'center',\n        fontSize: 'small',\n        color: '#000'\n    },\n    maxRoundTwo: {\n        width: 145,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: 'small',\n        color: '#f00',\n        position: 'absolute',\n        bottom: 4\n    },\n    checkmark: {\n        fontSize: 'xx-large',\n        color: '#0f0',\n        position: 'absolute',\n        left: 2,\n        bottom: 0\n    },\n    x: {\n        fontSize: 'xx-large',\n        color: '#f00',\n        position: 'absolute',\n        left: 4,\n        bottom: 0\n    }\n})\n\nexport default Milestone\n","import FormControlLabel from '@material-ui/core/FormControlLabel'\nimport React, {useEffect, useState} from 'react'\nimport Card from '@material-ui/core/Card/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Button from '@material-ui/core/Button'\nimport Masonry from 'react-masonry-component'\nimport {originalMilestoneData, alternateMilestoneData} from './milestoneData'\nimport Milestone from './Milestone'\nimport {makeStyles} from '@material-ui/styles'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Radio from '@material-ui/core/Radio'\n\nfunction Milestones() {\n    const classes = useStyles()\n    \n    const getDataArray = (type = milestoneType) => {\n        const data = type === 'original' ? originalMilestoneData : alternateMilestoneData\n        return data.map(() => 'available')\n    }\n\n    const [{milestones, milestoneType}, setMilestones] = useState(() => {\n        try {\n            const oldStorageData = localStorage.getItem(localStorageKey)\n            const parsedData = JSON.parse(oldStorageData)\n            if (parsedData && parsedData.milestones && parsedData.milestoneType) {\n                return parsedData\n            }\n        } catch (ex) {\n            console.warn('Error loading local storage data: ', ex)\n            localStorage.removeItem(localStorageKey)\n        }\n        return {\n            milestones: getDataArray('original'),\n            milestoneType: 'original'\n        }\n    })\n\n    useEffect(() => {\n        const data = JSON.stringify({milestones, milestoneType})\n        localStorage.setItem(localStorageKey, data)\n    }, [milestones, milestoneType])\n\n    const reset = () => {\n        const newMilestones = getDataArray()\n        setMilestones({milestones: newMilestones, milestoneType})\n\n        const newValue = JSON.stringify({\n            milestones: newMilestones,\n            milestoneType\n        })\n        localStorage.setItem(localStorageKey, newValue)\n    }\n\n    const updateMilestones = (index, value) => {\n        const newMilestones = [...milestones]\n        newMilestones[index] = value\n        setMilestones({milestones: newMilestones, milestoneType})\n    }\n\n    const handleMilestoneSetChange = event => {\n        const newType = event.target.value\n        if (newType !== milestoneType) {\n            // set defaults\n            setMilestones({\n                milestones: getDataArray(newType),\n                milestoneType: newType\n            })\n        }\n    }\n\n    const milestoneData = milestoneType === 'original' ? originalMilestoneData : alternateMilestoneData\n    return (\n        <Card className={classes.card}>\n            <CardHeader title=\"Milestone Tracker\"/>\n            <CardContent>\n                <Masonry>\n                    {milestones.map((value, key) =>\n                        <Milestone\n                            key={key}\n                            index={key}\n                            milestone={milestoneData[key]}\n                            value={value}\n                            onChange={updateMilestones}\n                        />\n                    )}\n                </Masonry>\n            </CardContent>\n            <CardActions>\n                <Button color=\"secondary\" onClick={reset}>Reset</Button>\n                <div className={classes.spacer}/>\n                <RadioGroup\n                    name=\"milestoneType\"\n                    className={classes.group}\n                    value={milestoneType}\n                    onChange={handleMilestoneSetChange}\n                >\n                    <div className={classes.milestoneTypes}>\n                        <FormControlLabel\n                            value=\"original\"\n                            control={<Radio/>}\n                            label=\"Original\"\n                        />\n                        <FormControlLabel\n                            value=\"alternate\"\n                            control={<Radio/>}\n                            label=\"Alternate\"\n                        />\n                    </div>\n                </RadioGroup>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport const localStorageKey = 'milestones'\n\nconst useStyles = makeStyles({\n    card: {\n        margin: 16,\n        maxWidth: 900\n    },\n    spacer: {\n        display: 'flex',\n        flex: 1\n    },\n    milestoneTypes: {\n        display: 'flex',\n        flexDirection: 'row'\n    }\n})\n\nexport default Milestones\n","import React from 'react'\nimport {createMuiTheme} from '@material-ui/core/styles'\nimport {ThemeProvider} from '@material-ui/styles'\nimport {HashRouter, Route} from 'react-router-dom'\n\nimport Nav from './nav/Nav'\nimport Calc from './calc/Calc'\nimport BulkCalc from './calc/BulkCalc'\nimport Setup from './setup/Setup'\nimport Milestones from './milestones/Milestones'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n})\n\nfunction App() {\n    return (\n        <HashRouter>\n            <ThemeProvider theme={theme}>\n                <div>\n                    <Nav/>\n\n                    <Route exact path=\"/\" component={Calc}/>\n                    <Route path=\"/calc\" component={Calc}/>\n                    <Route path=\"/bulk\" component={BulkCalc}/>\n                    <Route path=\"/setup\" component={Setup}/>\n                    <Route path=\"/milestones\" component={Milestones}/>\n                </div>\n            </ThemeProvider>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\nfunction render(Component) {\n    ReactDOM.render(<Component/>, document.getElementById('root'))\n}\n\nrender(App)\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const next = require('./App').default\n        render(next)\n    })\n}\n"],"sourceRoot":""}